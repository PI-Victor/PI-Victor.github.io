<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frontend on Software and Ops</title>
    <link>https://victor.cloudflavor.io/tags/frontend/</link>
    <description>Recent content in frontend on Software and Ops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Jan 2021 13:48:52 +0100</lastBuildDate><atom:link href="https://victor.cloudflavor.io/tags/frontend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue vs React Part I (Vue&#39;s prolific simplicity)</title>
      <link>https://victor.cloudflavor.io/2021/01/vue-vs-react-part-i-vues-prolific-simplicity/</link>
      <pubDate>Sun, 10 Jan 2021 13:48:52 +0100</pubDate>
      
      <guid>https://victor.cloudflavor.io/2021/01/vue-vs-react-part-i-vues-prolific-simplicity/</guid>
      <description>Yep, it&amp;rsquo;s the beginning of 2021 and it&amp;rsquo;s one of those posts! I decided there aren&amp;rsquo;t enough of them on the internet and thought i might indulge in writing one ðŸ˜†.
This comes from my perspective as a beginner in both frameworks and i will be talking about vue 2 not vue 3, i haven&amp;rsquo;t rolled out, ported or even read anything on vue 3 yet.
Initially i wanted to write a single post, but there&amp;rsquo;s a lot of example code to cover, so i decided to split it in three instead.</description>
    </item>
    
    <item>
      <title>gRPC Web</title>
      <link>https://victor.cloudflavor.io/2021/01/grpc-web/</link>
      <pubDate>Sun, 03 Jan 2021 03:06:04 +0100</pubDate>
      
      <guid>https://victor.cloudflavor.io/2021/01/grpc-web/</guid>
      <description>In this posts we will explore how to make a frontend, written in React, talk to a gRPC service.
gRPC and the web Browsers can&amp;rsquo;t talk to gRPC services natively so the solution came in the form of a proxy that could translate the frontend http requests made by the browser to gRPC calls that the backend gRPC service could understand.
These solutions are differently implemented in both libraries that emerged to tackle this problem.</description>
    </item>
    
  </channel>
</rss>
